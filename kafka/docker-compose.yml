version: "3"
services:
  kafka:
    container_name: kafka
    image: ${KAFKA}
    ports:
      - 9092:9092
      - 9093:9093
    # depends_on:
    #   - zookeeper
    environment:
      #KAFKA_ADVERTISED_HOST_NAME: kafka
      # KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://kafka:9093
      KAFKA_LISTENERS: INSIDE://kafka:9092,OUTSIDE://kafka:9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      # LOG4J_LOGGER_KAFKA: DEBUG
      KAFKA_BROKER_ID: 101
      # KAFKA_CREATE_TOPICS: "pubsub:2:1:compact"
      KAFKA_CREATE_TOPICS: "filebeat_topic:1:1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      # KAFKA_NUM_PARTITIONS: 2
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      # KAFKA_MESSAGE_MAX_BYTES: 20000000
      # KAFKA_MAX_REQUEST_SIZE: 20000000
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      # The number of hours to keep a log file before deleting it 
      KAFKA_LOG_RETENTION_HOURS: 1
    restart: always
    volumes:
      - kafkaData:/kafka
    deploy:
      resources:
        limits:
          memory: 2G
    networks:
      - shared_network

volumes:
  kafkaData:

networks:
  shared_network:
    external:
      name: shared_network